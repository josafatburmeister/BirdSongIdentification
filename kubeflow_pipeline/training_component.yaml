name: Train Model
description: Traines a model on labled spectograms
inputs:
  - {
      name: GCS Bucket,
      type: String,
      default: "bird-song-identification",
      description: "Name of Google Cloud Storage bucket that should be used for caching spectrogram files",
    }
  - {
      name: Input Path,
      type: Directory,
      description: "Path of the data folder",
    }
  - {
      name: Architecture,
      type: String,
      default: "resnet18",
      description: "Model architecture",
    }
  - {
      name: Batch Size,
      type: Integer,
      default: 32,
      description: "Size of the training batches",
    }
  - {
      name: Chunk Length,
      type: Integer,
      description: "Chunk length in milliseconds",
    }
  - {
      name: Experiment Name,
      type: String,
      description: "Experiment Description"
    }
  - {
      name: Early Stopping,
      type: Boolean,
      default: False,
      description: "Whether early stopping should be used for model training"
    }
  - {
      name: Include Noise Samples,
      type: Bool,
      default: True,
      description: "Whether a class for noise samples should be used",
    }
  - {
      name: Is Hyperparameter Tuning,
      type: Boolean,
      default: False,
      description: "Whether the run is a hyperparameter tuning run"
    }
  - {
      name: Layers To Unfreeze,
      type: List,
      description: "Model layers that should be unfreezed in transfer learning"
    }
  - {
      name: Learning Rate,
      type: Float,
      default: 0.001,
      description: "Learning rate"
    }
  - {
      name: Learning Rate Scheduler,
      type: String,
      description: "Learning rate scheduler type"
    }
  - {
      name: Learning Rate Scheduler Gamma,
      type: String,
      description: "Gamma value for stepwise learning rate decay (only used if learning rate scheduler is set to 'step_lr')"
    }
  - {
      name: Learning Rate Scheduler Step Size,
      type: String,
      description: "Step size for stepwise learning rate decay (only used if learning rate scheduler is set to 'step_lr')"
    }
  - {
      name: Minimum Change,
      type: Float,
      default: 0.0,
      description: "Minimum change parameter for early stopping (only used if early stopping is activated)"
    }
  - {
      name: Multi Label Classification,
      type: Bool,
      default: False,
      description: "Whether a multi-label classification model should be use",
    }
  - {
      name: Multi Label Classification Threshold,
      type: Float,
      default: 0.5,
      description: "Threshold for assigning samples to positive class in multi-label classification",
    }
  - {
      name: Monitor,
      type: String,
      default: "f1-score",
      description: "Name of metric that should be used for early stopping (only used if early stopping is activated)",
    }
  - {
      name: Number Epochs,
      type: Integer,
      default: 25,
      description: "Number of Epochs for the training/validation cycle",
    }
  - {
      name: Number Workers,
      type: Integer,
      default: 0,
      description: "Number of dataloading workers",
    }
  - {
      name: Optimizer,
      type: String,
      default: "Adam",
      description: "Optimizer type",
    }
  - {
      name: Patience,
      type: Integer,
      default: 3,
      description: "Patience parameter for early stopping",
    }
  - {
      name: Track Metrics,
      type: Boolean,
      default: True,
      description: "Whether the run metrics should be tracked in Weights and Biases",
    }
  - {
      name: Undersample Noise Samples,
      type: Boolean,
      default: True,
      description: "Whether the number of noise samples should be reduced to the maximum number of samples per species",
    }
  - {
      name: WandB Entity Name,
      type: String,
      description: "Name of Weights and Biases entity that should be used to track the run metrics (only used if 'Track Metrics' is set to true)",
    }
  - {
      name: WandB Key,
      type: String,
      description: "Login key for Weights and Biases (only used if 'Track Metrics' is set to true)",
    }
  - {
      name: WandB Project Name,
      type: String,
      description: "Name of Weights and Biases project that should be used to track the run metrics (only used if 'Track Metrics' is set to true)",
    }
  - {
    name: Weight Decay,
    type: Float,
    description: "Lambda parameter for L2-regularization",
  }
outputs:
  - { name: Pipeline Metrics, type: Metrics }
implementation:
  container:
    image: us.gcr.io/gcp-bakdata-kubeflow-cluster/bird-song-identification:latest
    command:
      [
        python,
        kubeflow_pipeline/run_pipeline.py,
        train_model,
        --gcs_bucket,
        { inputValue: GCS Bucket },
        --input_path,
        { inputPath: Input Path },
        --architecture,
        { inputValue: Architecture },
        --batch_size,
        { inputValue: Batch Size },
        --chunk_length,
        { inputValue: Chunk Length },
        --early_stopping,
        { inputValue: Early Stopping },
        --experiment_name,
        { inputValue: Experiment Name },
        --include_noise_samples,
        { inputPath: Include Noise Samples },
        --is_hyperparameter_tuning,
        { inputValue: Is Hyperparameter Tuning },
        --layers_to_unfreeze,
        { inputValue: Layers To Unfreeze },
        --learning_rate,
        { inputValue: Learning Rate },
        --learning_rate_scheduler,
        { inputValue: Learning Rate Scheduler },
        --learning_rate_scheduler_gamma,
        { inputValue: Learning Rate Scheduler Gamma },
        --learning_rate_scheduler_step_size,
        { inputValue: Learning Rate Scheduler Step Size },
        --min_change,
        { inputValue: Minimum Change },
        --monitor,
        { inputValue: Monitor },
        --multi_label_classification,
        { inputValue: Multi Label Classification },
        --multi_label_classification_threshold,
        { inputValue: Multi Label Classification Threshold },
        --number_epochs,
        { inputValue: Number Epochs },
        --optimizer,
        { inputValue: Optimizer },
        --patience,
        { inputValue: Patience },
        --number_workers,
        { inputValue: Number Workers},
        --track_metrics,
        { inputValue: Track Metrics },
        --undersample_noise_samples,
        { inputValue: Undersample Noise Samples },
        --wandb_entity_name,
        { inputValue: WandB Entity Name },
        --wandb_key,
        { inputValue: WandB Key },
        --wandb_project_name,
        { inputValue: WandB Project Name },
        --weight_decay,
        { inputValue: Weight Decay }
    ]
    fileOutputs:
      Pipeline Metrics: /MLPipeline_Metrics.json
